///////////////////////////////////////////////////////////////////////////////
//
//	Reader.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Reader.h"

///////////////////////////////////////////////////////////////////////////////
//
//	Constructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::Reader(sc_module_name zName)
: sc_module(zName)
{
	SC_THREAD(interface);
	sensitive << clk.pos();
}

///////////////////////////////////////////////////////////////////////////////
//
//	Destructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::~Reader()
{
}

///////////////////////////////////////////////////////////////////////////////
//
//	read
//
///////////////////////////////////////////////////////////////////////////////
void Reader::interface(void)
{
	// Boucle infinie
	while(1)
	{
		// Attendre une requete
		do{
			wait(1);
		}while(!this->request.read());
		// lire la valeur de l'adresse
		unsigned int addr = this->address.read();
		
		// Demander la donnee a l'adresse lue
		this->data.write(dataPortRAM->Read(addr));
		
		// envoyer ack => bubble
		this->ack.write(true);
		wait(1);
		//enlever ack		
		this->ack.write(false);	
	}
}
