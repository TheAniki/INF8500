///////////////////////////////////////////////////////////////////////////////
//
//	Reader.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Reader.h"

///////////////////////////////////////////////////////////////////////////////
//
//	Constructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::Reader(sc_module_name zName)
: sc_module(zName)
{
	/*
	
	À compléter
	
	*/
	SC_CTHREAD(interface,clk.pos());
}

///////////////////////////////////////////////////////////////////////////////
//
//	Destructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::~Reader()
{
}

///////////////////////////////////////////////////////////////////////////////
//
//	read
//
///////////////////////////////////////////////////////////////////////////////
void Reader::interface(void)
{

	// Boucle infinie
	while(1)
	{
		// Attendre une requete
		wait(request);

		// lire la valeur de l'adresse
		unsigned int add = address.read();
		
		// Demander la donnee a l'adresse lue
		data.write(dataPortRAM->Read(add));

		cout<<"reader interface"<<endl;
		
		// envoyer ack => bubble
		ack.write(true);
		// enlever ack		
		ack.write(false);
		
	}
}
